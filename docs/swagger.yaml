basePath: /api/v1
definitions:
  domain.Pagination:
    properties:
      data: {}
      limit:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    type: object
  domain.User:
    properties:
      balance:
        type: number
      email:
        type: string
      id:
        type: integer
      last_visit_at:
        type: string
      password:
        type: string
      registered_at:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
  v1.UserVerifyInp:
    properties:
      code:
        type: string
      id:
        type: integer
    required:
    - code
    - id
    type: object
  v1.dataResponse:
    properties:
      count:
        type: integer
      data: {}
    type: object
  v1.paginationResponse:
    properties:
      pagination:
        $ref: '#/definitions/domain.Pagination'
    type: object
  v1.refreshTokenInp:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  v1.response:
    properties:
      message:
        type: string
    type: object
  v1.tokenResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  v1.userSignInInp:
    properties:
      password:
        maxLength: 64
        minLength: 8
        type: string
      username:
        maxLength: 32
        minLength: 6
        type: string
    required:
    - password
    - username
    type: object
  v1.userSignUpInp:
    properties:
      email:
        maxLength: 64
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
      username:
        maxLength: 32
        minLength: 8
        type: string
    required:
    - email
    - password
    - username
    type: object
host: localhost:8009
info:
  contact: {}
  description: REST API for shop
  title: All social networks shop API
  version: "1.0"
paths:
  /categories:
    get:
      consumes:
      - application/json
      description: get all categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Get all categories
      tags:
      - categories
  /categories/{category_id}:
    get:
      consumes:
      - application/json
      description: get subcategories by category_id
      parameters:
      - description: category id
        in: path
        name: category_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.dataResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Get subcategories
      tags:
      - subcategories
  /products:
    get:
      consumes:
      - application/json
      description: Get all products with pagination and filters
      parameters:
      - default: 10
        description: Number of items per page
        in: query
        maximum: 100
        name: limit
        type: integer
      - default: 0
        description: Page number
        in: query
        name: page
        type: integer
      - description: category_id
        in: query
        name: category_id
        type: integer
      - description: subcategory_id
        in: query
        name: subcategory_id
        type: integer
      - default: 0
        description: 'Product availability: enter 1 if true, 0 if false'
        in: query
        name: is_available
        type: integer
      - description: 'sort price: enter asc or desc'
        in: query
        name: sort_price
        type: string
      - description: 'sort defect: enter asc or desc'
        in: query
        name: sort_defect
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.paginationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: Products with filters
      tags:
      - products
  /users/:
    get:
      consumes:
      - application/json
      description: user get by refresh token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UsersAuth: []
      summary: User get by refresh token
      tags:
      - users
  /users/auth/refresh:
    post:
      consumes:
      - application/json
      description: user refresh tokens
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.refreshTokenInp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User Refresh Tokens
      tags:
      - users-auth
  /users/sign-in:
    post:
      consumes:
      - application/json
      description: user sign in
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignInInp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User SignIn
      tags:
      - users-auth
  /users/sign-up:
    post:
      consumes:
      - application/json
      description: create user account
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignUpInp'
      produces:
      - application/json
      responses:
        "201":
          description: ok
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User SignUp
      tags:
      - users-auth
  /users/verify/:
    post:
      consumes:
      - application/json
      description: user verify registration
      parameters:
      - description: user verify
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.UserVerifyInp'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/v1.tokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - UsersAuth: []
      summary: User Verify Registration
      tags:
      - users-auth
securityDefinitions:
  UsersAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
